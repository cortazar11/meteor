{"version":3,"sources":["api/meteorJSON.js","components/MeteorList.js","actions/index.js","components/Form.js","components/App.js","reducers/meteorReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","MeteorList","this","props","fetchMeteors","term","trim","meteoriteFiltered","meteors","filter","meteorite","meteor1","name","split","RegExp","test","meteorites","map","year","moment","format","react_default","a","createElement","key","parseInt","id","nametype","recclass","mass","fall","reclat","reclong","className","renderList","React","Component","connect","state","items","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","meteorJSON","get","sent","type","payload","data","stop","_x","apply","arguments","Form","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","onSubmit","onFocus","e","value","target","window","location","reload","setState","preventDefault","fetchTerm","class","style","marginLeft","App","textAlign","components_Form","components_MeteorList","initialState","combineReducers","length","undefined","action","objectSpread","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.fd4919dc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://data.nasa.gov/resource/gh4g-9sfh.json'\n})","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchMeteors} from '../actions';\nimport moment from 'moment';\n\nclass MeteorList extends React.Component{\n\n    componentDidMount(){\n        this.props.fetchMeteors()\n    }\n    \n\n    renderList(){\n            const term= this.props.term.trim()\n            const meteoriteFiltered= this.props.meteors.filter((meteorite)=>{\n                    const meteor=meteorite.name\n                    const meteor1=meteor.split(\"(\")[0].trim()\n                    const re=new RegExp(\"^\"+meteor1+\"$\",\"i\")\n                    return re.test(term)\n                    \n                })\n            \n            let arr=[]\n            if(term){\n                arr=meteoriteFiltered\n            } else {\n                arr= this.props.meteors\n            }\n            \n            const meteorites=arr.map((meteorite)=>{\n                \n                    const year=moment(meteorite.year).format('YYYY')\n                    return (\n                        <tbody>\n                                <tr key={parseInt(meteorite.id)}>\n                                    <td>{meteorite.name}</td>\n                                    <td>{meteorite.id}</td>\n                                    <td>{meteorite.nametype}</td>\n                                    <td>{meteorite.recclass}</td>\n                                    <td>{meteorite.mass}</td>\n                                    <td>{meteorite.fall}</td>\n                                    <td>{year}</td>\n                                    <td>{meteorite.reclat}</td>\n                                    <td>{meteorite.reclong}</td>\n                                \n                                </tr>\n                        </tbody>\n                    )\n\n                \n                \n            })\n\n            \n            return (\n                <table className=\"ui celled table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Id</th>\n                            <th>Name Type</th>\n                            <th>Rec Class</th>\n                            <th>Mass (g)</th>\n                            <th>Fall</th>\n                            <th>Year</th>\n                            <th>Latitude</th>\n                            <th>Longitud</th>\n                        </tr>\n                    </thead>\n                    {meteorites}\n                </table>\n            )\n    }\n\n    render(){\n        \n        return (\n            <div>{this.renderList()}</div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        meteors: state.meteors.items,\n        term: state.meteors.term\n    }\n}\n\nexport default connect(mapStateToProps,{\n    fetchMeteors\n})(MeteorList);","import meteorJSON from '../api/meteorJSON';\n\nexport const fetchMeteors=()=>{\n    return async (dispatch)=>{\n        const response= await meteorJSON.get()\n\n        dispatch({\n            type: 'FETCH_METEORS',\n            payload: response.data\n        })\n    }\n}\n\nexport const fetchTerm=(value)=>{\n    return {\n        type: 'FETCH_TERM',\n        payload: value\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {fetchTerm} from '../actions';\n\nclass Form extends React.Component {\n        \n    constructor(props) {\n        super(props);\n        this.state = {\n          term: ''\n        };\n    \n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n      }\n\n      \n/*\n      changeCase(str){\n        const arr=str.split(' ')\n        \n        let meteor=\"\"\n        \n        const arrMapped=arr.map(function(element){\n          const word=element.split('')\n          const firstLetter=word[0].toUpperCase()\n          let nextLetters=[]\n          for(let i=1;i<word.length;i++){\n            nextLetters+=word[i].toLowerCase()\n          }\n          \n          const newWord=firstLetter+nextLetters\n          \n          return newWord\n          \n         })\n\n        \n        meteor=arrMapped.join(\" \")\n        return meteor;\n\n        \n      }\n\n*/\n    \n\n        onChange(e){\n            const value=e.target.value\n            if(value===''){\n                window.location.reload()\n            }\n            this.setState({\n                term: value\n                \n            })\n            \n        }\n\n        onSubmit(e){\n            e.preventDefault();\n            if(this.state.term){\n                \n                this.props.fetchTerm(this.state.term)\n            }\n        }\n\n        onFocus(e){\n            e.preventDefault()\n            if(this.state.term){\n                this.setState({\n                    term: ''\n                })\n                \n                window.location.reload()\n            }\n            \n            \n            \n        }   \n\n        render(){\n                \n\n                return (\n                    <div class=\"ui segment\" id=\"myForm\">\n                        <form onSubmit={this.onSubmit} class=\"ui action input\" style={{marginLeft: '40%'}}>\n                            <input\n                            type=\"text\"\n                            name=\"search\"\n                            onChange={this.onChange}\n                            onFocus={this.onFocus}\n                            value={this.state.term}\n                            />\n                    \n                        <button type=\"submit\">Search</button>\n                        </form>\n            </div>\n            )\n        }\n}\n\nexport default connect(null, {\n    fetchTerm\n    \n})(Form);\n\n","import React from 'react';\n\n\nimport MeteorList from './MeteorList';\nimport Form from './Form';\n\nconst App=()=>{\n    return (\n        <div className=\"ui container\">\n            <div style={{textAlign:'center'}}><h1>Meteorite Explorer</h1></div>\n            <Form />\n            <MeteorList />\n        </div>\n    )\n}\n\nexport default App;\n","const initialState={\n    items: [],\n    term: ''\n}\n\nexport default (state=initialState,action)=>{\n        switch(action.type){\n            case 'FETCH_METEORS':\n                return {...state, items: action.payload}\n            case 'FETCH_TERM':\n                return {\n                    ...state,\n                    term: action.payload\n                }\n            default:\n                return state\n        }\n}","import {combineReducers} from 'redux';\nimport meteorReducer from './meteorReducer';\n\nexport default combineReducers({\n    meteors: meteorReducer\n    \n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store=createStore(reducers,applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}