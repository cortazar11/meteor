{"version":3,"sources":["api/meteorJSON.js","components/MeteorList.js","actions/index.js","components/Form.js","components/App.js","reducers/meteorReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","MeteorList","this","props","fetchMeteors","term","meteoriteFiltered","meteors","filter","meteorite","name","meteorites","map","year","moment","format","react_default","a","createElement","key","parseInt","id","nametype","recclass","mass","fall","reclat","reclong","className","renderList","React","Component","connect","state","items","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","meteorJSON","get","sent","type","payload","data","stop","_x","apply","arguments","Form","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","onSubmit","onFocus","str","splittedStr","split","firstChar","toUpperCase","nextChars","i","length","toLowerCase","e","value","target","window","location","reload","setState","preventDefault","meteor","changeCase","fetchTerm","class","style","marginLeft","App","textAlign","components_Form","components_MeteorList","initialState","combineReducers","undefined","action","objectSpread","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.9a1e9ee6.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://data.nasa.gov/resource/gh4g-9sfh.json'\n})","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchMeteors} from '../actions';\nimport moment from 'moment';\n\nclass MeteorList extends React.Component{\n\n    componentDidMount(){\n        this.props.fetchMeteors()\n    }\n    \n\n    renderList(){\n            const term= this.props.term\n            const meteoriteFiltered= this.props.meteors.filter((meteorite)=>{\n                    return meteorite.name===term\n                    \n                    \n            })\n            \n            let arr=[]\n            if(term){\n                arr=meteoriteFiltered\n            } else {\n                arr= this.props.meteors\n            }\n            \n            const meteorites=arr.map((meteorite)=>{\n                \n                    const year=moment(meteorite.year).format('YYYY')\n                    return (\n                        <tbody>\n                                <tr key={parseInt(meteorite.id)}>\n                                    <td>{meteorite.name}</td>\n                                    <td>{meteorite.id}</td>\n                                    <td>{meteorite.nametype}</td>\n                                    <td>{meteorite.recclass}</td>\n                                    <td>{meteorite.mass}</td>\n                                    <td>{meteorite.fall}</td>\n                                    <td>{year}</td>\n                                    <td>{meteorite.reclat}</td>\n                                    <td>{meteorite.reclong}</td>\n                                \n                                </tr>\n                        </tbody>\n                    )\n\n                \n                \n            })\n\n            \n            return (\n                <table className=\"ui celled table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Id</th>\n                            <th>Name Type</th>\n                            <th>Rec Class</th>\n                            <th>Mass (g)</th>\n                            <th>Fall</th>\n                            <th>Year</th>\n                            <th>Latitude</th>\n                            <th>Longitud</th>\n                        </tr>\n                    </thead>\n                    {meteorites}\n                </table>\n            )\n    }\n\n    render(){\n        \n        return (\n            <div>{this.renderList()}</div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        meteors: state.meteors.items,\n        term: state.meteors.term\n    }\n}\n\nexport default connect(mapStateToProps,{\n    fetchMeteors\n})(MeteorList);","import meteorJSON from '../api/meteorJSON';\n\nexport const fetchMeteors=()=>{\n    return async (dispatch)=>{\n        const response= await meteorJSON.get()\n\n        dispatch({\n            type: 'FETCH_METEORS',\n            payload: response.data\n        })\n    }\n}\n\nexport const fetchTerm=(value)=>{\n    return {\n        type: 'FETCH_TERM',\n        payload: value\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {fetchTerm} from '../actions';\n\nclass Form extends React.Component {\n        \n    constructor(props) {\n        super(props);\n        this.state = {\n          term: ''\n        };\n    \n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n      }\n\n      \n\n      changeCase(str){\n        const splittedStr=str.split('')\n        const firstChar=splittedStr[0].toUpperCase();\n        let nextChars=''\n        for(let i=1;i<splittedStr.length;i++){\n            nextChars+=splittedStr[i].toLowerCase()\n        }\n        const searchTerm= firstChar+nextChars;\n    \n        return searchTerm\n      }\n\n\n    \n\n        onChange(e){\n            const value=e.target.value\n            if(value===''){\n                window.location.reload()\n            }\n            this.setState({\n                term: value\n                \n            })\n        }\n\n        onSubmit(e){\n            e.preventDefault();\n            if(this.state.term){\n                const meteor=this.changeCase(this.state.term)\n                this.props.fetchTerm(meteor)\n            }\n        }\n\n        onFocus(e){\n            e.preventDefault()\n            if(this.state.term){\n                this.setState({\n                    term: ''\n                })\n                \n                window.location.reload()\n            }\n            \n            \n            \n        }   \n\n        render(){\n                \n\n                return (\n                    <div class=\"ui segment\" id=\"myForm\">\n                        <form onSubmit={this.onSubmit} class=\"ui action input\" style={{marginLeft: '40%'}}>\n                            <input\n                            type=\"text\"\n                            name=\"search\"\n                            onChange={this.onChange}\n                            onFocus={this.onFocus}\n                            value={this.state.term}\n                            />\n                    \n                        <button type=\"submit\">Search</button>\n                        </form>\n            </div>\n            )\n        }\n}\n\nexport default connect(null, {\n    fetchTerm\n    \n})(Form);\n\n","import React from 'react';\n\n\nimport MeteorList from './MeteorList';\nimport Form from './Form';\n\nconst App=()=>{\n    return (\n        <div className=\"ui container\">\n            <div style={{textAlign:'center'}}><h1>Meteorite Explorer</h1></div>\n            <Form />\n            <MeteorList />\n        </div>\n    )\n}\n\nexport default App;\n","const initialState={\n    items: [],\n    term: ''\n}\n\nexport default (state=initialState,action)=>{\n        switch(action.type){\n            case 'FETCH_METEORS':\n                return {...state, items: action.payload}\n            case 'FETCH_TERM':\n                return {\n                    ...state,\n                    term: action.payload\n                }\n            default:\n                return state\n        }\n}","import {combineReducers} from 'redux';\nimport meteorReducer from './meteorReducer';\n\nexport default combineReducers({\n    meteors: meteorReducer\n    \n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store=createStore(reducers,applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}